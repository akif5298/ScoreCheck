// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  appleId   String?  @unique
  name      String?
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  games     Game[]
  teams     Team[]
  players   Player[]
  playerStats PlayerStats[]

  @@map("users")
}



model Game {
  id          String   @id @default(cuid())
  date        DateTime
  homeTeam    String
  awayTeam    String
  homeScore   Int
  awayScore   Int
  screenshotUrl String?
  processed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  players     Player[]
  teams       Team[]

  @@map("games")
}

model Player {
  id          String   @id @default(cuid())
  name        String
  team        String
  position    String?
  minutes     String?
  points      Int      @default(0)
  rebounds    Int      @default(0)
  assists     Int      @default(0)
  steals      Int      @default(0)
  blocks      Int      @default(0)
  turnovers   Int      @default(0)
  fouls       Int      @default(0)
  fgMade      Int      @default(0)
  fgAttempted Int      @default(0)
  fgPercentage Float?  @default(0)
  threeMade   Int      @default(0)
  threeAttempted Int   @default(0)
  threePercentage Float? @default(0)
  ftMade      Int      @default(0)
  ftAttempted Int      @default(0)
  ftPercentage Float?  @default(0)
  plusMinus   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  gameId      String
  game        Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([gameId, name, team])
  @@map("players")
}

model Team {
  id          String   @id @default(cuid())
  name        String
  isHome      Boolean
  points      Int      @default(0)
  rebounds    Int      @default(0)
  assists     Int      @default(0)
  steals      Int      @default(0)
  blocks      Int      @default(0)
  turnovers   Int      @default(0)
  fouls       Int      @default(0)
  fgMade      Int      @default(0)
  fgAttempted Int      @default(0)
  fgPercentage Float?  @default(0)
  threeMade   Int      @default(0)
  threeAttempted Int   @default(0)
  threePercentage Float? @default(0)
  ftMade      Int      @default(0)
  ftAttempted Int      @default(0)
  ftPercentage Float?  @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  gameId      String
  game        Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([gameId, name])
  @@map("teams")
}

model PlayerStats {
  id          String   @id @default(cuid())
  playerName  String
  team        String
  gamesPlayed Int      @default(0)
  avgPoints   Float    @default(0)
  avgRebounds Float    @default(0)
  avgAssists  Float    @default(0)
  avgSteals   Float    @default(0)
  avgBlocks   Float    @default(0)
  avgTurnovers Float   @default(0)
  avgFouls    Float    @default(0)
  avgFgPercentage Float @default(0)
  avgThreePercentage Float @default(0)
  avgFtPercentage Float @default(0)
  avgPlusMinus Float   @default(0)
  totalPoints Int      @default(0)
  totalRebounds Int    @default(0)
  totalAssists Int     @default(0)
  totalSteals Int      @default(0)
  totalBlocks Int      @default(0)
  totalTurnovers Int   @default(0)
  totalFouls Int       @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, playerName, team])
  @@map("player_stats")
}
